version: 2.0

jobs:
  checks:
    docker:
      - image: circleci/python:3.6
    working_directory: ~/app

    steps:
    - checkout
    - restore_cache:
        keys:
          - v1-dependencies-{{ checksum "requirements.txt" }}
    - run:
        name: ensure assembled files committed
        command: |
          python -m venv venv
          source venv/bin/activate
          pip install -r requirements.txt
          tools/generate_dockerfiles.sh
          if [[ ! -z "$(git status --porcelain)" ]]; then
             echo "Generated files changed. Did you run 'tools/generate_dockerfiles.sh'?"
             exit 1
          fi
    - save_cache:
        paths:
          - ./venv
        key: v1-dependencies-{{ checksum "requirements.txt" }}
    - persist_to_workspace:
        root: .
        paths:
          - .

  builds:
    docker:
      - image: circleci/python:3.6
    working_directory: ~/app

    steps:
    - attach_workspace:
        at: ~/app
    - setup_remote_docker:
        docker_layer_caching: true
    - restore_cache:
        keys:
          - v1-dockercache-{{ .Branch }}
    - run:
        name: load docker cache
        command: |
          if [[ -f ~/app/caches/${CIRCLE_PROJECT_REPONAME}.tar.gz ]]; then
            gunzip -c ~/app/caches/${CIRCLE_PROJECT_REPONAME}.tar.gz | docker load
            docker images
          fi
    - run:
        name: build
        command: |
          tools/build_all.sh
    - run:
        name: save docker cache
        command: |
          tools/build_all.sh | grep '\-\-\->' | grep -v 'Using cache' | sed -e 's/[ >-]//g' > /tmp/layers.txt
          docker save $(cat /tmp/layers.txt) | gzip < ~/app/caches/${CIRCLE_PROJECT_REPONAME}.tar.gz
    - save_cache:
        key: v1-dockercache-{{ .Branch }}
        paths:
          - ~/app/caches/
    - persist_to_workspace:
        root: .
        paths:
          - .

  pushes:
    docker:
      - image: circleci/python:3.6
    working_directory: ~/app

    steps:
      - attach_workspace:
          at: ~/app
      - setup_remote_docker:
          docker_layer_caching: true
      - run:
          name: load docker cache
          command: |
            if [[ -f ~/app/caches/${CIRCLE_PROJECT_REPONAME}.tar.gz ]]; then
              gunzip -c ~/app/caches/${CIRCLE_PROJECT_REPONAME}.tar.gz | docker load
              docker images
            fi
      - run:
          name: push
          command: |
            docker login -u $DOCKER_USER -p $DOCKER_PASSWORD
            tools/push_all.sh


workflows:
  version: 2
  buildtest_and_deploy:
    jobs:
      - checks
      - builds:
          requires:
            - checks
      - pushes:
          filters:
            branches:
              only:
                - master
          requires:
            - builds
